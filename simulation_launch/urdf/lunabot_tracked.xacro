<?xml version="1.0"?>
<robot name="lunabot_track" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Define robot constants -->
    <xacro:property name="base_length" value="0.5"/>
    <xacro:property name="base_width" value="0.25"/>
    <xacro:property name="base_height" value="0.25"/>

    <xacro:property name="track_length" value="0.6"/>
    <xacro:property name="track_width" value="0.1"/>
    <xacro:property name="track_height" value="0.15"/>
    <xacro:property name="track_yoff" value="0.2"/>
    <xacro:property name="track_zoff" value="0.13"/>

    <xacro:property name="camera_size" value="0.05"/>

    <!-- Define intertial property macros -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <!-- Base Footprint -->
    <!-- <link name="base_footprint">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </link> -->
    <!-- <joint name="base_j" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0 0 ${track_height/2 + track_zoff}" rpy="0 0 0"/>
    </joint> -->

    <!-- Robot Base -->
    <link name="base_link">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <xacro:box_inertia m="5" w="${base_length}" h="${base_width}" d="${base_height}"/>
    </link>

    <!-- Tracks -->
    <xacro:macro name="track" params="prefix y_reflect">
        <link name="${prefix}_track_link">
            <visual>
                <geometry>
                    <box size="${track_length} ${track_width} ${track_height}"/>
                </geometry>
            </visual>
            <visual>
                <origin xyz="${track_length/2} 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${track_height/2}" length="${track_width}"/>
                </geometry>
            </visual>
            <visual>
                <origin xyz="${-track_length/2} 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${track_height/2}" length="${track_width}"/>
                </geometry>
            </visual>
            <collision>
                <geometry>
                    <box size="${track_length} ${track_width} ${track_height}"/>
                </geometry>
            </collision>
            <collision>
                <origin xyz="${track_length/2} 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${track_height/2}" length="${track_width}"/>
                </geometry>
            </collision>
            <collision>
                <origin xyz="${-track_length/2} 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${track_height/2}" length="${track_width}"/>
                </geometry>
            </collision>
            <xacro:box_inertia m="2" w="${track_length}" h="${track_width}" d="${track_height}"/>
            <gravity>1</gravity>
            <kinematic>0</kinematic>
        </link>
        <joint name="${prefix}_track_j" type="fixed">
            <parent link="base_link"/>
            <child link="${prefix}_track_link"/>
            <origin xyz="0 ${y_reflect * track_yoff} ${-track_zoff}" rpy="0 0 0"/>
        </joint>
    </xacro:macro>
    <xacro:track prefix="left" y_reflect="1.0"/>
    <xacro:track prefix="right" y_reflect="-1.0"/>
    
    <gazebo reference="left_track_link">
        <mu1>0.7</mu1>
        <mu2>150</mu2>
        <fdir1>0 1 0</fdir1>
    </gazebo>
    <gazebo reference="right_track_link">
        <mu1>0.7</mu1>
        <mu2>150</mu2>
        <fdir1>0 1 0</fdir1>
    </gazebo>
    <gazebo reference="left_track_j">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="right_track_j">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo>
        <plugin filename="libSimpleTrackedVehiclePlugin.so" name="simple_tracked_vehicle">
            <body>base_link</body>
            <left_track>left_track_link</left_track>
            <right_track>right_track_link</right_track>
            <track_mu>100</track_mu>
            <track_mu2>100</track_mu2>
        </plugin>

        <plugin filename="libKeysToCmdVelPlugin.so" name="keyboard_control">
            <publish_as_twist>true</publish_as_twist>
            <cmd_vel_topic>~/test_bot/cmd_vel_twist</cmd_vel_topic>
        </plugin>
    </gazebo>

    <link name="depth_camera_link">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <visual>
            <geometry>
                <box size="${camera_size} ${camera_size} ${camera_size}"/>
            </geometry>
            <material name="Red">
                <color rgba="1.0 0 0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${camera_size} ${camera_size} ${camera_size}"/>
            </geometry>
        </collision>
        <xacro:box_inertia m="0.1" w="${camera_size}" h="${camera_size}" d="${camera_size}"/>
    </link>
    <joint name="depth_camera_j" type="fixed">
        <parent link="base_link"/>
        <child link="depth_camera_link"/>
        <origin xyz="${base_length/2} 0 ${base_height/2}" rpy="0 0 0"/>
    </joint>
    <link name="depth_camera_optical_link"/>
    <joint name="depth_camera_optical_j" type="fixed">
        <parent link="depth_camera_link"/>
        <child link="depth_camera_optical_link"/>
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    </joint>

    <gazebo reference="depth_camera_link">
        <material>Gazebo/Red</material>
        <sensor name="depth_camera" type="depth">
            <always_on>1</always_on>
            <update_rate>10</update_rate>
            <visualize>true</visualize>
            <camera>
                <horizontal_fov>1.51844</horizontal_fov>
                <image>
                    <width>320</width>
                    <height>320</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>10.0</far>
                </clip>
            </camera>
            <plugin filename="libgazebo_ros_camera.so" name="depth_camera_controller">
                <frame_name>depth_camera_optical_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo>
        <plugin filename="libgazebo_ros_p3d.so" name="p3d_controller">
            <ros>
                <namespace>ground_truth</namespace>
                <remapping>odom:=odom</remapping>
            </ros>
            <always_on>true</always_on>
            <update_rate>50.0</update_rate>
            <body_name>base_link</body_name>
            <frame_name>map</frame_name>
            <xyz_offset>0 0 0</xyz_offset>
            <rpy_offset>0 0 0</rpy_offset>
        </plugin>
    </gazebo>

</robot>